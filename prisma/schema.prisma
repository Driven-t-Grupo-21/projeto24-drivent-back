generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost:5432/drivent?schema=public"
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique @db.VarChar(255)
  password        String            @db.VarChar(255)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Enrollment      Enrollment?
  Orders          Order?
  Session         Session[]
  ActivitiesOrder ActivitiesOrder[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Event {
  id                 Int      @id @default(autoincrement())
  title              String   @db.VarChar(255)
  backgroundImageUrl String   @db.VarChar(255)
  logoImageUrl       String   @db.VarChar(255)
  startsAt           DateTime
  endsAt             DateTime
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  Hotel              Hotel[]
  Ticket             Ticket[]
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  cpf       String   @db.VarChar(255)
  birthday  DateTime
  phone     String   @db.VarChar(255)
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Address   Address?
}

model Address {
  id            Int        @id @default(autoincrement())
  cep           String     @db.VarChar(255)
  street        String     @db.VarChar(255)
  city          String     @db.VarChar(255)
  state         String     @db.VarChar(255)
  number        String     @db.VarChar(255)
  neighborhood  String     @db.VarChar(255)
  addressDetail String?    @db.VarChar(255)
  enrollmentId  Int        @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Enrollment    Enrollment @relation(fields: [enrollmentId], references: [id])
}

model Order {
  id       Int       @id @default(autoincrement())
  userId   Int       @unique
  hosting  Boolean
  total    String    @db.VarChar(10)
  ticketId Int
  Ticket   Ticket    @relation(fields: [ticketId], references: [id])
  User     User      @relation(fields: [userId], references: [id])
  Books    RoomBook?
}

model Ticket {
  id      Int     @id @default(autoincrement())
  type    String  @db.VarChar(255)
  price   String  @db.VarChar(10)
  eventId Int
  Event   Event   @relation(fields: [eventId], references: [id])
  Order   Order[]
}

model Hotel {
  id           Int     @id @default(autoincrement())
  name         String  @db.VarChar(255)
  eventId      Int
  logoImageUrl String  @db.VarChar(255)
  Event        Event   @relation(fields: [eventId], references: [id])
  Rooms        Rooms[]
}

model Rooms {
  id        Int        @id @default(autoincrement())
  beds      Int
  hotelId   Int
  number    Int
  Hotel     Hotel      @relation(fields: [hotelId], references: [id])
  RoomBooks RoomBook[]
}

model RoomBook {
  id      Int   @id @default(autoincrement())
  roomId  Int
  orderId Int   @unique
  Order   Order @relation(fields: [orderId], references: [id])
  Rooms   Rooms @relation(fields: [roomId], references: [id])
}

model Activities {
  id              Int               @id @default(autoincrement())
  activityDate    DateTime
  activityId      Int
  Activity        ActivitiesList    @relation(fields: [activityId], references: [id])
  localId         Int
  local           Locations         @relation(fields: [localId], references: [id])
  hour            String
  vacancies       Int
  ActivitiesOrder ActivitiesOrder[]
}

model ActivitiesList {
  id         Int          @id @default(autoincrement())
  activity   String
  duration   Int
  Activities Activities[]
}

model Locations {
  id         Int          @id @default(autoincrement())
  name       String
  Activities Activities[]
}

model ActivitiesOrder {
  id              Int        @id @default(autoincrement())
  userId          Int        @unique
  User            User       @relation(fields: [userId], references: [id])
  activityInfosId Int
  activityInfo    Activities @relation(fields: [activityInfosId], references: [id])
}
